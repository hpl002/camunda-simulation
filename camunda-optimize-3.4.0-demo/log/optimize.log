10:04:12.913 [main] INFO  o.c.o.s.e.OptimizeElasticsearchClientFactory - Initializing Elasticsearch rest client...
10:04:13.415 [main] INFO  o.c.o.s.e.OptimizeElasticsearchClientFactory - Elasticsearch client has successfully been started
10:04:13.633 [main] INFO  o.c.o.s.e.s.ElasticsearchMetadataService - Was not able to retrieve metadata index!
10:04:13.663 [main] INFO  o.c.o.s.e.s.ElasticSearchSchemaManager - Initializing Optimize schema...
10:04:17.144 [main] INFO  o.c.o.s.e.s.ElasticSearchSchemaManager - Creating or updating template with name optimize-variable-update-instance_v2
10:04:17.204 [main] INFO  o.c.o.s.e.s.ElasticSearchSchemaManager - Creating index optimize-variable-update-instance_v2-000001 from template with write alias optimize-variable-update-instance
10:04:17.412 [main] INFO  o.c.o.s.e.s.ElasticSearchSchemaManager - Creating or updating template with name optimize-event_v4
10:04:17.480 [main] INFO  o.c.o.s.e.s.ElasticSearchSchemaManager - Creating index optimize-event_v4-000001 from template with write alias optimize-event
10:04:19.322 [main] INFO  o.c.o.s.e.s.ElasticSearchSchemaManager - Optimize schema initialized successfully.
10:04:19.969 [main] INFO  o.c.o.s.i.UserIdentityCacheService - Initializing user identity sync.
10:04:19.973 [main] INFO  o.c.o.s.i.UserIdentityCacheService - Scheduling user identity sync
10:04:20.066 [main] INFO  o.c.o.s.i.UserTaskIdentityCacheService - Initializing assignee/candidateGroup identity sync.
10:04:20.067 [main] INFO  o.c.o.s.i.UserTaskIdentityCacheService - Scheduling assignee/candidateGroup identity sync
10:04:20.106 [ThreadPoolTaskScheduler-1] INFO  o.c.o.s.e.CompositeAggregationScroller - Was not able to get next page of composite aggregation because at least one instance from [optimize-process-instance] does not exist.
10:04:20.112 [ThreadPoolTaskScheduler-1] INFO  o.c.o.s.e.CompositeAggregationScroller - Was not able to get next page of composite aggregation because at least one instance from [optimize-process-instance] does not exist.
10:04:20.113 [ThreadPoolTaskScheduler-1] INFO  o.c.o.s.i.UserTaskIdentityCacheService - Engine assignee/candidateGroup identity sync complete
10:04:20.384 [main] INFO  o.c.o.s.cleanup.CleanupScheduler - Initializing OptimizeCleanupScheduler
10:04:20.395 [main] INFO  o.c.o.s.cleanup.CleanupScheduler - Stopping cleanup scheduling
10:04:20.403 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.rest.engine.EngineContext.getAuthorizationsForType(EngineContext.java:679)
	at org.camunda.optimize.rest.engine.EngineContext.getAllApplicationAuthorizations(EngineContext.java:500)
	at org.camunda.optimize.rest.engine.EngineContext.getApplicationAuthorizedIdentities(EngineContext.java:130)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.populateAllAuthorizedIdentitiesForEngineToCache(UserIdentityCacheService.java:52)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.lambda$populateCache$0(UserIdentityCacheService.java:47)
	at java.base/java.util.HashMap$Values.forEach(HashMap.java:976)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.populateCache(UserIdentityCacheService.java:47)
	at org.camunda.optimize.service.identity.AbstractIdentityCacheService.synchronizeIdentities(AbstractIdentityCacheService.java:147)
	at org.camunda.optimize.service.identity.AbstractIdentityCacheService.syncIdentitiesWithRetry(AbstractIdentityCacheService.java:113)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:20.404 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Could not fetch application authorizations from the Engine with alias [camunda-bpm] to check the access permissions.
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.rest.engine.EngineContext.getAuthorizationsForType(EngineContext.java:679)
	at org.camunda.optimize.rest.engine.EngineContext.getAllApplicationAuthorizations(EngineContext.java:500)
	at org.camunda.optimize.rest.engine.EngineContext.getApplicationAuthorizedIdentities(EngineContext.java:130)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.populateAllAuthorizedIdentitiesForEngineToCache(UserIdentityCacheService.java:52)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.lambda$populateCache$0(UserIdentityCacheService.java:47)
	at java.base/java.util.HashMap$Values.forEach(HashMap.java:976)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.populateCache(UserIdentityCacheService.java:47)
	at org.camunda.optimize.service.identity.AbstractIdentityCacheService.synchronizeIdentities(AbstractIdentityCacheService.java:147)
	at org.camunda.optimize.service.identity.AbstractIdentityCacheService.syncIdentitiesWithRetry(AbstractIdentityCacheService.java:113)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:20.404 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.UserIdentityCacheService - Could not sync user identities with the engine. Will stop retrying as next scheduled sync is approaching
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Could not fetch application authorizations from the Engine with alias [camunda-bpm] to check the access permissions.
	at org.camunda.optimize.rest.engine.EngineContext.getAllApplicationAuthorizations(EngineContext.java:507)
	at org.camunda.optimize.rest.engine.EngineContext.getApplicationAuthorizedIdentities(EngineContext.java:130)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.populateAllAuthorizedIdentitiesForEngineToCache(UserIdentityCacheService.java:52)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.lambda$populateCache$0(UserIdentityCacheService.java:47)
	at java.base/java.util.HashMap$Values.forEach(HashMap.java:976)
	at org.camunda.optimize.service.identity.UserIdentityCacheService.populateCache(UserIdentityCacheService.java:47)
	at org.camunda.optimize.service.identity.AbstractIdentityCacheService.synchronizeIdentities(AbstractIdentityCacheService.java:147)
	at org.camunda.optimize.service.identity.AbstractIdentityCacheService.syncIdentitiesWithRetry(AbstractIdentityCacheService.java:113)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:21.006 [ThreadPoolTaskScheduler-1] INFO  o.c.o.s.e.w.ElasticsearchWriterUtil - Progress of task (ID:D4OTH0l1QbecFiK-oJvCxQ:195) on terminated user sessions with timestamp older than 2021-05-02T09:04:20.918+02:00: 0% (total: 0, updated: 0, created: 0, deleted: 0)
10:04:21.627 [main] INFO  o.c.o.s.u.c.e.IngestionConfiguration - No ingestion api secret was configured, generated a temporary token [aeUZXQvyZ9LlDDs3].
10:04:21.680 [main] INFO  o.c.o.s.telemetry.TelemetryScheduler - Initializing TelemetryScheduler
10:04:21.680 [main] INFO  o.c.o.s.telemetry.TelemetryScheduler - Starting telemetry scheduling
10:04:21.681 [ThreadPoolTaskScheduler-1] INFO  o.c.o.s.telemetry.TelemetryScheduler - Checking whether telemetry data can be sent.
10:04:21.684 [ThreadPoolTaskScheduler-1] INFO  o.c.o.s.telemetry.TelemetryScheduler - Telemetry disabled.
10:04:22.723 [main] INFO  o.c.o.s.i.e.EngineImportScheduler - Start scheduling import from engine camunda-bpm.
10:04:22.727 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:22.728 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:24.230 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:24.230 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:26.486 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:26.486 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:29.865 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:29.866 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:34.499 [qtp673672784-82] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.499 [qtp673672784-82] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.521 [qtp673672784-18] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.521 [qtp673672784-18] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.536 [qtp673672784-82] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.536 [qtp673672784-82] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.689 [qtp673672784-77] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.689 [qtp673672784-77] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.689 [qtp673672784-84] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.689 [qtp673672784-83] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.689 [qtp673672784-80] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.689 [qtp673672784-83] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.689 [qtp673672784-84] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.689 [qtp673672784-80] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.704 [qtp673672784-16] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.705 [qtp673672784-16] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.709 [qtp673672784-80] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.709 [qtp673672784-18] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.709 [qtp673672784-80] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.709 [qtp673672784-18] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.731 [qtp673672784-16] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.732 [qtp673672784-16] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.738 [qtp673672784-82] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.739 [qtp673672784-18] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.739 [qtp673672784-82] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.739 [qtp673672784-18] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.739 [qtp673672784-77] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.758 [qtp673672784-13] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.status.StatusCheckingService.isEngineVersionRequestSuccessful(StatusCheckingService.java:112)
	at org.camunda.optimize.service.status.StatusCheckingService.isConnectedToEngine(StatusCheckingService.java:91)
	at org.camunda.optimize.service.status.StatusCheckingService.getStatusResponse(StatusCheckingService.java:80)
	at org.camunda.optimize.service.status.StatusCheckingService.getStatusResponse(StatusCheckingService.java:55)
	at org.camunda.optimize.websocket.StatusNotifier.<init>(StatusNotifier.java:33)
	at org.camunda.optimize.websocket.StatusWebSocket.onOpen(StatusWebSocket.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.jetty.websocket.common.events.annotated.CallableMethod.call(CallableMethod.java:70)
	at org.eclipse.jetty.websocket.jsr356.annotations.OnOpenCallable.call(OnOpenCallable.java:52)
	at org.eclipse.jetty.websocket.jsr356.annotations.JsrEvents.callOpen(JsrEvents.java:170)
	at org.eclipse.jetty.websocket.jsr356.endpoints.JsrAnnotatedEventDriver.onConnect(JsrAnnotatedEventDriver.java:189)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.openSession(AbstractEventDriver.java:217)
	at org.eclipse.jetty.websocket.jsr356.endpoints.AbstractJsrEventDriver.openSession(AbstractJsrEventDriver.java:107)
	at org.eclipse.jetty.websocket.common.WebSocketSession.open(WebSocketSession.java:493)
	at org.eclipse.jetty.websocket.common.WebSocketSession.onOpened(WebSocketSession.java:459)
	at org.eclipse.jetty.io.AbstractConnection.onOpened(AbstractConnection.java:213)
	at org.eclipse.jetty.io.AbstractConnection.onOpen(AbstractConnection.java:205)
	at org.eclipse.jetty.io.AbstractEndPoint.upgrade(AbstractEndPoint.java:444)
	at org.eclipse.jetty.server.HttpConnection.onCompleted(HttpConnection.java:401)
	at org.eclipse.jetty.server.HttpChannel.onCompleted(HttpChannel.java:820)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:368)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:279)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:135)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:34.761 [qtp673672784-16] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.761 [qtp673672784-16] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.761 [qtp673672784-85] INFO  o.c.o.service.license.LicenseManager - 
############### Heads up ################
You tried to access Optimize, but no valid license could be
found. Please enter a valid license key!  If you already have 
a valid key you can have a look here, how to add it to Optimize:

https://docs.camunda.org/optimize/3.4/user-guide/license/ 

In case you don't have a valid license, feel free to contact us at:

https://camunda.com/contact/

You will now be redirected to the license page...
10:04:34.761 [qtp673672784-85] WARN  o.c.optimize.jetty.LicenseFilter - Given License is invalid or not available!
10:04:34.784 [qtp673672784-81] WARN  o.c.o.websocket.StatusWebSocket - Web socket connection terminated prematurely!
10:04:34.934 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:34.935 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:35.119 [qtp673672784-17] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.status.StatusCheckingService.isEngineVersionRequestSuccessful(StatusCheckingService.java:112)
	at org.camunda.optimize.service.status.StatusCheckingService.isConnectedToEngine(StatusCheckingService.java:91)
	at org.camunda.optimize.service.status.StatusCheckingService.getStatusResponse(StatusCheckingService.java:80)
	at org.camunda.optimize.service.status.StatusCheckingService.getStatusResponse(StatusCheckingService.java:55)
	at org.camunda.optimize.websocket.StatusNotifier.<init>(StatusNotifier.java:33)
	at org.camunda.optimize.websocket.StatusWebSocket.onOpen(StatusWebSocket.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.jetty.websocket.common.events.annotated.CallableMethod.call(CallableMethod.java:70)
	at org.eclipse.jetty.websocket.jsr356.annotations.OnOpenCallable.call(OnOpenCallable.java:52)
	at org.eclipse.jetty.websocket.jsr356.annotations.JsrEvents.callOpen(JsrEvents.java:170)
	at org.eclipse.jetty.websocket.jsr356.endpoints.JsrAnnotatedEventDriver.onConnect(JsrAnnotatedEventDriver.java:189)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.openSession(AbstractEventDriver.java:217)
	at org.eclipse.jetty.websocket.jsr356.endpoints.AbstractJsrEventDriver.openSession(AbstractJsrEventDriver.java:107)
	at org.eclipse.jetty.websocket.common.WebSocketSession.open(WebSocketSession.java:493)
	at org.eclipse.jetty.websocket.common.WebSocketSession.onOpened(WebSocketSession.java:459)
	at org.eclipse.jetty.io.AbstractConnection.onOpened(AbstractConnection.java:213)
	at org.eclipse.jetty.io.AbstractConnection.onOpen(AbstractConnection.java:205)
	at org.eclipse.jetty.io.AbstractEndPoint.upgrade(AbstractEndPoint.java:444)
	at org.eclipse.jetty.server.HttpConnection.onCompleted(HttpConnection.java:401)
	at org.eclipse.jetty.server.HttpChannel.onCompleted(HttpChannel.java:820)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:368)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:279)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:135)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:42.536 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:42.537 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:53.938 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:53.939 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:04:57.001 [qtp673672784-82] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.status.StatusCheckingService.isEngineVersionRequestSuccessful(StatusCheckingService.java:112)
	at org.camunda.optimize.service.status.StatusCheckingService.isConnectedToEngine(StatusCheckingService.java:91)
	at org.camunda.optimize.service.status.StatusCheckingService.getStatusResponse(StatusCheckingService.java:80)
	at org.camunda.optimize.service.status.StatusCheckingService.getStatusResponse(StatusCheckingService.java:55)
	at org.camunda.optimize.websocket.StatusNotifier.<init>(StatusNotifier.java:33)
	at org.camunda.optimize.websocket.StatusWebSocket.onOpen(StatusWebSocket.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.jetty.websocket.common.events.annotated.CallableMethod.call(CallableMethod.java:70)
	at org.eclipse.jetty.websocket.jsr356.annotations.OnOpenCallable.call(OnOpenCallable.java:52)
	at org.eclipse.jetty.websocket.jsr356.annotations.JsrEvents.callOpen(JsrEvents.java:170)
	at org.eclipse.jetty.websocket.jsr356.endpoints.JsrAnnotatedEventDriver.onConnect(JsrAnnotatedEventDriver.java:189)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.openSession(AbstractEventDriver.java:217)
	at org.eclipse.jetty.websocket.jsr356.endpoints.AbstractJsrEventDriver.openSession(AbstractJsrEventDriver.java:107)
	at org.eclipse.jetty.websocket.common.WebSocketSession.open(WebSocketSession.java:493)
	at org.eclipse.jetty.websocket.common.WebSocketSession.onOpened(WebSocketSession.java:459)
	at org.eclipse.jetty.io.AbstractConnection.onOpened(AbstractConnection.java:213)
	at org.eclipse.jetty.io.AbstractConnection.onOpen(AbstractConnection.java:205)
	at org.eclipse.jetty.io.AbstractEndPoint.upgrade(AbstractEndPoint.java:444)
	at org.eclipse.jetty.server.HttpConnection.onCompleted(HttpConnection.java:401)
	at org.eclipse.jetty.server.HttpChannel.onCompleted(HttpChannel.java:820)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:368)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:279)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:383)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:05:02.848 [qtp673672784-79] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.security.EngineAuthenticationProvider.performAuthenticationCheck(EngineAuthenticationProvider.java:39)
	at org.camunda.optimize.service.security.AuthenticationService.lambda$authenticateUser$0(AuthenticationService.java:42)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.HashMap$ValueSpliterator.tryAdvance(HashMap.java:1696)
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)
	at org.camunda.optimize.service.security.AuthenticationService.authenticateUser(AuthenticationService.java:52)
	at org.camunda.optimize.rest.AuthenticationRestService.authenticateUser(AuthenticationRestService.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:176)
	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:469)
	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:391)
	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:80)
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:791)
	at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1626)
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:228)
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1601)
	at org.camunda.optimize.jetty.NoCachingFilter.doFilter(NoCachingFilter.java:46)
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1601)
	at org.camunda.optimize.jetty.SingleSignOnFilter.doFilter(SingleSignOnFilter.java:73)
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1601)
	at org.camunda.optimize.jetty.LicenseFilter.doFilter(LicenseFilter.java:86)
	at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)
	at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1601)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:548)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(GzipHandler.java:713)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1435)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:501)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1350)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:322)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:146)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:516)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:388)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:633)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:380)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:279)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:383)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:05:02.849 [qtp673672784-79] WARN  o.c.o.s.s.AuthenticationService - Could not log you in. 
Error messages from engines: 
camunda-bpm: Could not authenticated against engine [camunda-bpm]. Connection to engine was refused! Please check if the engine is still running. 

10:05:11.034 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:05:11.035 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:05:36.677 [ThreadPoolTaskScheduler-1] ERROR o.c.o.rest.engine.EngineContext - Failed to validate engine camunda-bpm version with error message: Engine didn't respond. Can not verify this engine's version
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:05:36.678 [ThreadPoolTaskScheduler-1] ERROR o.c.o.s.i.e.f.instance.TenantFetcher - Error during fetching of entities. Please check the connection with [camunda-bpm]!
org.camunda.optimize.service.exceptions.OptimizeRuntimeException: Engine didn't respond. Can not verify this engine's version
	at org.camunda.optimize.service.util.EngineVersionChecker.checkEngineVersionSupport(EngineVersionChecker.java:50)
	at org.camunda.optimize.rest.engine.EngineContext.getEngineClient(EngineContext.java:103)
	at org.camunda.optimize.service.importing.engine.fetcher.EngineEntityFetcher.getEngineClient(EngineEntityFetcher.java:33)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.performTenantRequest(TenantFetcher.java:58)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.lambda$fetchTenants$0(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.RetryBackoffEngineEntityFetcher.fetchWithRetry(RetryBackoffEngineEntityFetcher.java:42)
	at org.camunda.optimize.service.importing.engine.fetcher.instance.TenantFetcher.fetchTenants(TenantFetcher.java:44)
	at org.camunda.optimize.service.importing.engine.mediator.TenantImportMediator.importNextPage(TenantImportMediator.java:41)
	at org.camunda.optimize.service.importing.BackoffImportMediator.importNextPageRetryOnError(BackoffImportMediator.java:78)
	at org.camunda.optimize.service.importing.BackoffImportMediator.runImport(BackoffImportMediator.java:27)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.lambda$executeImportRound$2(EngineImportScheduler.java:114)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.executeImportRound(EngineImportScheduler.java:120)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:96)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.runImportRound(EngineImportScheduler.java:76)
	at org.camunda.optimize.service.importing.engine.EngineImportScheduler.run(EngineImportScheduler.java:38)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
10:06:07.291 [ThreadPoolTaskScheduler-1] INFO  o.c.o.s.e.w.ElasticsearchWriterUtil - Progress of task (ID:D4OTH0l1QbecFiK-oJvCxQ:516) on 7 process definitions: 0% (total: 0, updated: 0, created: 0, deleted: 0)
