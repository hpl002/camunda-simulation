{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://example.com/product.schema.json",
    "title": "Product",
    "description": "Upload configs",
    "type": "object",
    "required": [
        "tokens"
    ],
    "properties": {
        "start-time": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 date-time -- https://json-schema.org/understanding-json-schema/reference/string.html#id8"
        },
        "variables": {
            "description": "Process variables which are scoped to all process instances",
            "$ref": "#/$defs/variables"
        },
        "tokens": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "amount",
                    "distribution"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "variables": {
                        "description": "Process variables which are scoped to token only that are exposed to process on start",
                        "$ref": "#/$defs/variables"
                    },
                    "amount": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    "distribution": {
                        "description": "Distribution that determines the rate at which tokens are introduced. Must be described in ISO 8601 duration format",
                        "$ref": "#/$defs/iso8601Distribution"
                    }
                }
            }
        },
        "tasks": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "timing"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id must match some task in model"
                    },
                    "description": {
                        "type": "string",
                        "description": "task description"
                    },
                    "timing": {
                        "description": "Describes task duration as a distribution. The duration must be described in ISO 8601 duration format",
                        "$ref": "#/$defs/iso8601Distribution"
                    },
                    "resource-query": {
                        "type": "string",
                        "description": "Cypher query that resolves to some resource in the resoruce graph. Must resolve to a node with a id property"
                    }
                }
            }
        },
        "initialize_resources":{
            "type": "string",
            "description": "Cypher query used to initialize resources in neo4j. Can be modeled and exported in arrows.app"
        }
    },
    "$defs": {
        "distribution": {
            "type": "object",
            "oneOf": [
                {
                    "type": "object",
                    "required": [
                        "type",
                        "frequency"
                    ],
                    "properties": {
                        "type": {
                            "const": "constant"
                        },
                        "frequency": {
                            "type": "number",
                            "description": "Frequency",
                            "example": 100
                        }
                    },
                    "additionalProperties": false
                },
                {
                    "description": "distribution is biased and forces zero if it encounters a negative value. The mean must also always be greater than the SD",
                    "type": "object",
                    "required": [
                        "type",
                        "frequency"
                    ],
                    "properties": {
                        "type": {
                            "const": "normal distribution"
                        },
                        "frequency": {
                            "type": "object",
                            "required": [
                                "mean",
                                "sd"
                            ],
                            "properties": {
                                "mean": {
                                    "type": "integer",
                                    "description": "mean value",
                                    "example": 100
                                },
                                "sd": {
                                    "type": "integer",
                                    "description": "standard deviation",
                                    "example": 2
                                }
                            }
                        }
                    },
                    "additionalProperties": false
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "frequency"
                    ],
                    "properties": {
                        "type": {
                            "const": "random"
                        },
                        "frequency": {
                            "type": "object",
                            "required": [
                                "max",
                                "min"
                            ],
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "Min value",
                                    "example": 10
                                },
                                "max": {
                                    "type": "number",
                                    "description": "Max value",
                                    "example": 100
                                }
                            }
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },
        "iso8601Distribution": {
            "type": "object",
            "oneOf": [
                {
                    "type": "object",
                    "required": [
                        "type",
                        "frequency"
                    ],
                    "properties": {
                        "type": {
                            "const": "constant"
                        },
                        "frequency": {
                            "type": "string",
                            "description": "Frequency",
                            "example": "PT2M"
                        }
                    },
                    "additionalProperties": false
                },
                {
                    "description": "Distribution is biased and forces zero if it encounters a negative value. The mean must also always be greater than the SD",
                    "type": "object",
                    "required": [
                        "type",
                        "frequency"
                    ],
                    "properties": {
                        "type": {
                            "const": "normal distribution"
                        },
                        "frequency": {
                            "type": "object",
                            "required": [
                                "mean",
                                "sd"
                            ],
                            "properties": {
                                "mean": {
                                    "type": "string",
                                    "description": "mean value",
                                    "example": "PT10M"
                                },
                                "sd": {
                                    "type": "string",
                                    "description": "standard deviation",
                                    "example": "PT2M"
                                }
                            }
                        }
                    },
                    "additionalProperties": false
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "frequency"
                    ],
                    "properties": {
                        "type": {
                            "const": "random"
                        },
                        "frequency": {
                            "type": "object",
                            "required": [
                                "max",
                                "min"
                            ],
                            "properties": {
                                "min": {
                                    "type": "string",
                                    "description": "Min value",
                                    "example": "PT10M"
                                },
                                "max": {
                                    "type": "string",
                                    "description": "Max value",
                                    "example": "PT10M"
                                }
                            }
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },         
        "variable": {
            "type": "object",
            "oneOf": [
                {
                    "type": "object",
                    "required": [
                        "type",
                        "name",
                        "value"
                    ],
                    "properties": {
                        "type": {
                            "const": "string"
                        },
                        "value": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                {
                    "type": "object",
                    "required": [
                        "type",
                        "name",
                        "value"
                    ],
                    "properties": {
                        "type": {
                            "const": "distribution"
                        },
                        "value": {
                            "$ref": "#/$defs/distribution"
                        },
                        "name": {
                            "type": "string"
                        },
                        "refresh": {
                            "type": "boolean",
                            "deafult":false
                        }
                    }
                }
            ]
        },
        "variables": {
            "type": "array",
            "items": [
                {
                    "$ref": "#/$defs/variable"
                }
            ]
        }
    }
}